<?php
/**
 * @file
 * Install, update and uninstall functions for the foa install profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function foa_install() {
  // Hide feature-related notices during install, as the installer is tested
  // and the user cannot fix the notices anyway. The original error level is
  // restored in the cleanup task in foa.profile.
  $error_level = variable_get('error_level', 1);
  variable_set('foa_error_level', $error_level);
  variable_set('error_level', 0);

  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 0,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 0,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 0,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Themes.
  $default_theme = 'unimelb';
  $admin_theme = 'rubik';

  // Enable the unimelb theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  variable_set('theme_default', $default_theme);

  // Disable the bartik theme.
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();

  // Enable some standard blocks.
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

  // Full HTML permission goes on our new roles.
  $full_html_permission = filter_permission_name($full_html_format);

  $editor_role = new stdClass();
  $editor_role->name = 'editor';
  $editor_role->weight = 2;
  user_role_save($editor_role);

  // Save the editor rid for use in the arts feature install.
  variable_set('foa_editor_rid', $editor_role->rid);

  // Enable permissions for editor role.
  user_role_grant_permissions($editor_role->rid, array('access content', $full_html_permission));

  $admin_role = new stdClass();
  $admin_role->name = 'admin';
  $admin_role->weight = 3;
  user_role_save($admin_role);

  // Save the admin role for use in the arts feature install.
  variable_set('foa_admin_rid', $admin_role->rid);

  // Enable permissions for admin role.
  user_role_grant_permissions($admin_role->rid, array('access content', $full_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $site_admin_role = new stdClass();
  $site_admin_role->name = 'site admin';
  $site_admin_role->weight = 4;
  user_role_save($site_admin_role);
  user_role_grant_permissions($site_admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $site_admin_role->rid);

  // Assign user 1 the "site admin" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $site_admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');
}

/**
 * Disable the wysiwyg_fields module.
 */
function foa_update_7001() {
  module_disable('wysiwyg_fields');
  module_uninstall('wysiwyg_fields');
}
